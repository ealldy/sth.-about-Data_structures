堆（英语：heap)是计算机科学中一类特殊的数据结构的统称。堆通常是一个可以被看做一棵树的数组对象。堆总是满足下列性质：
堆中某个节点的值总是不大于或不小于其父节点的值；
堆总是一棵完全二叉树。

重点分清是n+1还是n
设一棵树有n+1个结点，有子节点的父节点编号为0~(n/2-1)，某个父节点(i)的子节点编号为(2*i+1),(2*i+2)
设一棵树有n个结点，有子节点的父节点编号为1~(n/2)，某个父节点(i)的子节点编号为(2*i),(2*i+1)

堆排序 时间复杂度nlog(n)
	有以n+1为例子（即有0号结点，共9个结点，编号为0-8）
第一步，构建堆：
	1，for k=(n/2-1)down to 0         //从堆底开始遍历父节点
	2，swap(k,2k+1/2k+2)        //父节点和两个子结点选出极值(最大或最小)进行交换
	此时完成有序堆的构造
第二步，调整堆：
	while (n!=0){
		1，arr[i]=f[0],f[0]=f[n--]     //取出第0号位置的值，且将n号位置放到第0号位置，且减小堆大小
		2，k=0 
		while (2k+1!=null) {
	                	swap(k,2k+1/2k+2)从0号向下遍历，父节点和两个子结点中选极值(最大或最小)进行交换
			k=2k+1;
		}
	}
	最终得有序数列arr[i]